<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>centos7安装nginx</title>
      <link href="/2023/03/12/MD-CentOS7/centos7%E5%AE%89%E8%A3%85nginx/"/>
      <url>/2023/03/12/MD-CentOS7/centos7%E5%AE%89%E8%A3%85nginx/</url>
      
        <content type="html"><![CDATA[<h2 id="下载nginx安装包"><a href="#下载nginx安装包" class="headerlink" title="下载nginx安装包"></a>下载nginx安装包</h2><p>进入官网下载页面，建议下载稳定版本</p><p><a href="https://nginx.org/en/download.html">https://nginx.org/en/download.html</a></p><p>下载完成后上传到centos</p><h2 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h2><p>安装依赖包</p><p>由于nginx是基于c语言开发的，所以需要安装c语言的编译环境，及正则表达式库等第三方依赖库。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install gcc pcre-devel zlib-devel openssl openssl-devel</span><br></pre></td></tr></table></figure><p>解压nginx压缩包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf nginx-1.22.1.tar.gz</span><br></pre></td></tr></table></figure><p>配置nginx编译环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd nginx-1.22.1</span><br><span class="line">./configure --prefix=/opt/moudle/nginx</span><br></pre></td></tr></table></figure><p><code>说明</code>: –prefix 指定的目录，就是我们安装Nginx的目录。</p><p>编译安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp; make install</span><br></pre></td></tr></table></figure><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看版本</span></span><br><span class="line">./nginx -v</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">检查配置文件，修改了nginx.conf核心配置文件之后，在启动Nginx服务之前，可以先检查一下conf/nginx.conf文件配置的是否有错误，命令如下：</span></span><br><span class="line">./nginx -t</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动</span></span><br><span class="line">./nginx</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动之后，我们可以通过ps -ef指令来查看nginx的进程是否存在。</span></span><br><span class="line">ps -ef | grep nginx</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">停止</span></span><br><span class="line">./nginx -s stop</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重新加载，当修改了Nginx配置文件后，需要重新加载才能生效，可以使用下面命令重新加载配置文件：</span></span><br><span class="line">./nginx -s reload</span><br></pre></td></tr></table></figure><h2 id="nginx-conf配置"><a href="#nginx-conf配置" class="headerlink" title="nginx.conf配置"></a>nginx.conf配置</h2><h3 id="配置静态网页"><a href="#配置静态网页" class="headerlink" title="配置静态网页"></a>配置静态网页</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">           </span><br><span class="line">            root   /opt/moudle/hexo-blog/public; #服务器上存放静态网页的目录</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Centos7 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos7 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac 安装 nodejs</title>
      <link href="/2023/03/12/MD-Mac/mac%20%E5%AE%89%E8%A3%85%20nodejs/"/>
      <url>/2023/03/12/MD-Mac/mac%20%E5%AE%89%E8%A3%85%20nodejs/</url>
      
        <content type="html"><![CDATA[<h2 id="安装nvm"><a href="#安装nvm" class="headerlink" title="安装nvm"></a>安装nvm</h2><p>可参考官方最新安装命令</p><p><a href="https://github.com/nvm-sh/nvm#install-script">https://github.com/nvm-sh/nvm#install-script</a></p><h3 id="Install-amp-Update-Script"><a href="#Install-amp-Update-Script" class="headerlink" title="Install &amp; Update Script"></a>Install &amp; Update Script</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash</span><br><span class="line">或</span><br><span class="line">wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash</span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nvm -v</span><br><span class="line"></span><br><span class="line">nvm list</span><br></pre></td></tr></table></figure><h3 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h3><p>如果报错：</p><p>curl: (7) Failed to connect to raw.githubusercontent.com port 443 after 3 ms: Connection refused</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">原因是发现是 github 的一些域名的 DNS 解析被污染，导致DNS 解析过程无法通过域名取得正确的IP地址</span><br><span class="line">解决方案</span><br><span class="line">打开 https://www.ipaddress.com/ 输入访问不了的域名</span><br><span class="line">查询之后可以获得正确的 IP 地址（任意一个即可）</span><br><span class="line">在本机的 host 文件中添加 ，可以使用switchhosts软件管理host</span><br><span class="line">185.199.108.133 raw.githubusercontent.com</span><br></pre></td></tr></table></figure><p>如果报错 zsh: command not found: nvm</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Troubleshooting on Linux</span><br><span class="line"></span><br><span class="line">On Linux, after running the install script, if you get nvm: command not found or see no feedback from your terminal after you type command -v nvm, simply close your current terminal, open a new terminal, and try verifying again. Alternatively, you can run the following commands for the different shells on the command line:</span><br><span class="line"></span><br><span class="line">bash: source ~/.bashrc</span><br><span class="line"></span><br><span class="line">zsh: source ~/.zshrc</span><br><span class="line"></span><br><span class="line">ksh: . ~/.profile</span><br><span class="line"></span><br><span class="line">These should pick up the nvm command.</span><br></pre></td></tr></table></figure><h2 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h2><h3 id="nvm管理nodejs版本"><a href="#nvm管理nodejs版本" class="headerlink" title="nvm管理nodejs版本"></a>nvm管理nodejs版本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">最新的lts版本</span> </span><br><span class="line">nvm install --lts </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">指定版本号下载(v要不要都可以)</span> </span><br><span class="line">nvm install v10.16.3</span><br></pre></td></tr></table></figure><h3 id="切换node版本："><a href="#切换node版本：" class="headerlink" title="切换node版本："></a>切换node版本：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">macOS系统的use指令只是临时切换</span> </span><br><span class="line">nvm alias default v10.16.3 </span><br></pre></td></tr></table></figure><h3 id="配置淘宝镜像："><a href="#配置淘宝镜像：" class="headerlink" title="配置淘宝镜像："></a>配置淘宝镜像：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org --global  </span><br><span class="line"></span><br><span class="line">npm config set disturl https://npm.taobao.org/dist --global</span><br></pre></td></tr></table></figure><h3 id="验证："><a href="#验证：" class="headerlink" title="验证："></a>验证：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm -v </span><br><span class="line">npx -v </span><br><span class="line">node -v</span><br></pre></td></tr></table></figure><h2 id="nvm常用命令"><a href="#nvm常用命令" class="headerlink" title="nvm常用命令"></a>nvm常用命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nvm install --lts # 下载最新的稳定版 </span><br><span class="line">nvm use &lt;版本号&gt; # 临时切换版本 </span><br><span class="line">nvm alias default &lt;版本号&gt; #永久切换版本（版本别名，default就是默认使用的版本） </span><br><span class="line">nvm uninstall &lt;版本号&gt; # 删除指定版本 </span><br><span class="line">nvm ls # 查看本地所有版本 </span><br><span class="line">nvm ls-remote --lts # 查看线上所有稳定版 </span><br></pre></td></tr></table></figure><h2 id="node常用命令"><a href="#node常用命令" class="headerlink" title="node常用命令"></a>node常用命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm init # 初始化node环境，-y可以快速初始化 </span><br><span class="line">npm i &lt;package&gt; # 下载指定库，看情况添加 -S或者-D，全局安装-g </span><br><span class="line">npm uninstall &lt;package&gt; # 删除node包，删除全局-g </span><br><span class="line">npm list --depth 0 # 查看当前目录下载的node包 </span><br><span class="line">npm list -g --depth 0 # 查看全局安装的node包</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装Hexo</title>
      <link href="/2023/03/12/MD-Hexo/%E5%AE%89%E8%A3%85Hexo/"/>
      <url>/2023/03/12/MD-Hexo/%E5%AE%89%E8%A3%85Hexo/</url>
      
        <content type="html"><![CDATA[<p>Hexo就是我们的个人博客网站的框架， 这里需要自己在电脑常里创建一个文件夹，可以命名为Blog，Hexo框架与以后你自己发布的网页都在这个文件夹中。创建好后，然后<code>cd</code>到这个文件夹下，打开命令终端</p><h2 id="部署Hexo"><a href="#部署Hexo" class="headerlink" title="部署Hexo"></a>部署Hexo</h2><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>依旧用<code>hexo -v</code>查看一下版本</p><p>至此就全部安装完了。</p><h3 id="初始化hexo"><a href="#初始化hexo" class="headerlink" title="初始化hexo"></a>初始化hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><p><code>注意</code>,这里的命令都是作用在刚刚创建的Blog文件夹中。</p><p>然后cd到blog目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog //进入这个myblog文件夹</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>新建完成后，指定文件夹目录下有：</p><ul><li>node_modules: 依赖包</li><li>public：存放生成的页面</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放你的文章</li><li>themes：主题</li><li>_config.yml: 博客的配置文件</li></ul><p>打开hexo的服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>在浏览器输入localhost:4000就可以看到你生成的博客了。</p><h2 id="Hexo-必装插件"><a href="#Hexo-必装插件" class="headerlink" title="Hexo 必装插件"></a>Hexo 必装插件</h2><h3 id="Hexo-asset-img"><a href="#Hexo-asset-img" class="headerlink" title="Hexo-asset-img"></a>Hexo-asset-img</h3><p>自动为文章中的图片提供绝对路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-img --save</span><br></pre></td></tr></table></figure><p>设置 <code>_config.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>比如新建一片博客名为 hexo-plugin，那么在创建文章 md 文件的同时会创建一个 hexo-plugin 的目录，文章对应的图片放入这个目录就行。</p><p>Typora 可以将图像设为 <code>$&#123;filename&#125;</code> 便可自动适配</p><h3 id="hexo-generator-search"><a href="#hexo-generator-search" class="headerlink" title="hexo-generator-search"></a>hexo-generator-search</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>配置根目录下的 <code>_config.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">template:</span> <span class="string">./search.xml</span></span><br></pre></td></tr></table></figure><p>最后需要导入搜索的模板文件 search.xml 文件到主题文件中，这个文件可以去 <a href="https://github.com/wzpan/hexo-generator-search">https://github.com/wzpan/hexo-generator-search</a> 下载，也可以在刚刚安装的依赖包中找到，具体地址为 node_modules/hexo-generator-search/demo_output/search.xml</p><p>修改 主題配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">CDN:</span></span><br></pre></td></tr></table></figure><h2 id="Hexo主题"><a href="#Hexo主题" class="headerlink" title="Hexo主题"></a>Hexo主题</h2><h3 id="Butterfly"><a href="#Butterfly" class="headerlink" title="Butterfly"></a>Butterfly</h3><p>一款很精致简单，但功能强大的主题。</p><p>主要有以下特点：</p><ol><li>Material Design 设计，简单漂亮，文章内容美观易读；</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现；</li><li>功能多，支持友链、评论模块、文章统计、音乐播放、视频播放等。</li></ol><ul><li>Github 地址：**<a href="https://link.zhihu.com/?target=https://github.com/jerryc127/hexo-theme-butterfly">https://github.com/jerryc127/hexo-theme-butterfly</a>**</li><li>安装教程：<a href="https://link.zhihu.com/?target=https://butterfly.js.org/posts/21cfbf15/">https://butterfly.js.org/posts/21cfbf15/</a></li></ul><h2 id="hexo部署在github"><a href="#hexo部署在github" class="headerlink" title="hexo部署在github"></a>hexo部署在github</h2><h3 id="在github上创建项目"><a href="#在github上创建项目" class="headerlink" title="在github上创建项目"></a>在github上创建项目</h3><p>新建一个项目，然后如下图所示，输入自己的项目名字，后面一定要加.github.io后缀，README初始化也要勾上。</p><img src="/2023/03/12/MD-Hexo/%E5%AE%89%E8%A3%85Hexo/image-20230312220906008.png" class="" title="image-20230312220906008"><p>然后项目就建成了</p><h3 id="配置根目录下的-config-yml"><a href="#配置根目录下的-config-yml" class="headerlink" title="配置根目录下的 _config.yml"></a>配置根目录下的 <code>_config.yml</code></h3><p>打开博客根目录下的_config.yml文件，这是博客的配置文件，在这里你可以修改与博客相关的各种信息。</p><p>修改最后一行的配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:lijianjun821/lijianjun821.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><p>repository修改为你自己的github项目地址。</p><h3 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h3><p>首先在博客根目录下右键打开git bash，安装一个扩展</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-deployer-git</span><br></pre></td></tr></table></figure><p>生成静态文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>然后输入hexo s可以本地预览效果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>最后输入hexo d上传到github上</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>这时打开你的github.io主页就能看到发布的文章啦。</p><p><a href="https://lijianjun821.github.io/">https://lijianjun821.github.io/</a></p><h3 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h3><p>1.首先解析域名,添加两条解析记录</p><img src="/2023/03/12/MD-Hexo/%E5%AE%89%E8%A3%85Hexo/image-20230312223119954.png" class="" title="image-20230312223119954"><p>2.打开你本地博客/source目录，新建CNAME文件，注意没有后缀。然后在里面写上你的域名，保存。最后运行hexo g、hexo d上传到github</p><p>3.使用域名<code>jianjunw.com</code>访问bolg</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hero </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
